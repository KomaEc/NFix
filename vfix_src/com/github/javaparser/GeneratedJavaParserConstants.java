package com.github.javaparser;

public interface GeneratedJavaParserConstants {
   int EOF = 0;
   int SPACE = 1;
   int WINDOWS_EOL = 2;
   int UNIX_EOL = 3;
   int OLD_MAC_EOL = 4;
   int SINGLE_LINE_COMMENT = 5;
   int ENTER_JAVADOC_COMMENT = 6;
   int ENTER_MULTILINE_COMMENT = 7;
   int JAVADOC_COMMENT = 8;
   int MULTI_LINE_COMMENT = 9;
   int COMMENT_CONTENT = 10;
   int ABSTRACT = 11;
   int ASSERT = 12;
   int BOOLEAN = 13;
   int BREAK = 14;
   int BYTE = 15;
   int CASE = 16;
   int CATCH = 17;
   int CHAR = 18;
   int CLASS = 19;
   int CONST = 20;
   int CONTINUE = 21;
   int _DEFAULT = 22;
   int DO = 23;
   int DOUBLE = 24;
   int ELSE = 25;
   int ENUM = 26;
   int EXTENDS = 27;
   int FALSE = 28;
   int FINAL = 29;
   int FINALLY = 30;
   int FLOAT = 31;
   int FOR = 32;
   int GOTO = 33;
   int IF = 34;
   int IMPLEMENTS = 35;
   int IMPORT = 36;
   int INSTANCEOF = 37;
   int INT = 38;
   int INTERFACE = 39;
   int LONG = 40;
   int NATIVE = 41;
   int NEW = 42;
   int NULL = 43;
   int PACKAGE = 44;
   int PRIVATE = 45;
   int PROTECTED = 46;
   int PUBLIC = 47;
   int RETURN = 48;
   int SHORT = 49;
   int STATIC = 50;
   int STRICTFP = 51;
   int SUPER = 52;
   int SWITCH = 53;
   int SYNCHRONIZED = 54;
   int THIS = 55;
   int THROW = 56;
   int THROWS = 57;
   int TRANSIENT = 58;
   int TRUE = 59;
   int TRY = 60;
   int VOID = 61;
   int VOLATILE = 62;
   int WHILE = 63;
   int REQUIRES = 64;
   int TO = 65;
   int WITH = 66;
   int OPEN = 67;
   int OPENS = 68;
   int USES = 69;
   int MODULE = 70;
   int EXPORTS = 71;
   int PROVIDES = 72;
   int TRANSITIVE = 73;
   int LONG_LITERAL = 74;
   int INTEGER_LITERAL = 75;
   int DECIMAL_LITERAL = 76;
   int HEX_LITERAL = 77;
   int OCTAL_LITERAL = 78;
   int BINARY_LITERAL = 79;
   int FLOATING_POINT_LITERAL = 80;
   int DECIMAL_FLOATING_POINT_LITERAL = 81;
   int DECIMAL_EXPONENT = 82;
   int HEXADECIMAL_FLOATING_POINT_LITERAL = 83;
   int HEXADECIMAL_EXPONENT = 84;
   int HEX_DIGITS = 85;
   int UNICODE_ESCAPE = 86;
   int CHARACTER_LITERAL = 87;
   int STRING_LITERAL = 88;
   int IDENTIFIER = 89;
   int LETTER = 90;
   int PART_LETTER = 91;
   int LPAREN = 92;
   int RPAREN = 93;
   int LBRACE = 94;
   int RBRACE = 95;
   int LBRACKET = 96;
   int RBRACKET = 97;
   int SEMICOLON = 98;
   int COMMA = 99;
   int DOT = 100;
   int AT = 101;
   int ASSIGN = 102;
   int LT = 103;
   int BANG = 104;
   int TILDE = 105;
   int HOOK = 106;
   int COLON = 107;
   int EQ = 108;
   int LE = 109;
   int GE = 110;
   int NE = 111;
   int SC_OR = 112;
   int SC_AND = 113;
   int INCR = 114;
   int DECR = 115;
   int PLUS = 116;
   int MINUS = 117;
   int STAR = 118;
   int SLASH = 119;
   int BIT_AND = 120;
   int BIT_OR = 121;
   int XOR = 122;
   int REM = 123;
   int LSHIFT = 124;
   int PLUSASSIGN = 125;
   int MINUSASSIGN = 126;
   int STARASSIGN = 127;
   int SLASHASSIGN = 128;
   int ANDASSIGN = 129;
   int ORASSIGN = 130;
   int XORASSIGN = 131;
   int REMASSIGN = 132;
   int LSHIFTASSIGN = 133;
   int RSIGNEDSHIFTASSIGN = 134;
   int RUNSIGNEDSHIFTASSIGN = 135;
   int ELLIPSIS = 136;
   int ARROW = 137;
   int DOUBLECOLON = 138;
   int RUNSIGNEDSHIFT = 139;
   int RSIGNEDSHIFT = 140;
   int GT = 141;
   int CTRL_Z = 142;
   int DEFAULT = 0;
   int IN_JAVADOC_COMMENT = 1;
   int IN_MULTI_LINE_COMMENT = 2;
   String[] tokenImage = new String[]{"<EOF>", "<SPACE>", "\"\\r\\n\"", "\"\\n\"", "\"\\r\"", "<SINGLE_LINE_COMMENT>", "<ENTER_JAVADOC_COMMENT>", "\"/*\"", "\"*/\"", "\"*/\"", "<COMMENT_CONTENT>", "\"abstract\"", "\"assert\"", "\"boolean\"", "\"break\"", "\"byte\"", "\"case\"", "\"catch\"", "\"char\"", "\"class\"", "\"const\"", "\"continue\"", "\"default\"", "\"do\"", "\"double\"", "\"else\"", "\"enum\"", "\"extends\"", "\"false\"", "\"final\"", "\"finally\"", "\"float\"", "\"for\"", "\"goto\"", "\"if\"", "\"implements\"", "\"import\"", "\"instanceof\"", "\"int\"", "\"interface\"", "\"long\"", "\"native\"", "\"new\"", "\"null\"", "\"package\"", "\"private\"", "\"protected\"", "\"public\"", "\"return\"", "\"short\"", "\"static\"", "\"strictfp\"", "\"super\"", "\"switch\"", "\"synchronized\"", "\"this\"", "\"throw\"", "\"throws\"", "\"transient\"", "\"true\"", "\"try\"", "\"void\"", "\"volatile\"", "\"while\"", "\"requires\"", "\"to\"", "\"with\"", "\"open\"", "\"opens\"", "\"uses\"", "\"module\"", "\"exports\"", "\"provides\"", "\"transitive\"", "<LONG_LITERAL>", "<INTEGER_LITERAL>", "<DECIMAL_LITERAL>", "<HEX_LITERAL>", "<OCTAL_LITERAL>", "<BINARY_LITERAL>", "<FLOATING_POINT_LITERAL>", "<DECIMAL_FLOATING_POINT_LITERAL>", "<DECIMAL_EXPONENT>", "<HEXADECIMAL_FLOATING_POINT_LITERAL>", "<HEXADECIMAL_EXPONENT>", "<HEX_DIGITS>", "<UNICODE_ESCAPE>", "<CHARACTER_LITERAL>", "<STRING_LITERAL>", "<IDENTIFIER>", "<LETTER>", "<PART_LETTER>", "\"(\"", "\")\"", "\"{\"", "\"}\"", "\"[\"", "\"]\"", "\";\"", "\",\"", "\".\"", "\"@\"", "\"=\"", "\"<\"", "\"!\"", "\"~\"", "\"?\"", "\":\"", "\"==\"", "\"<=\"", "\">=\"", "\"!=\"", "\"||\"", "\"&&\"", "\"++\"", "\"--\"", "\"+\"", "\"-\"", "\"*\"", "\"/\"", "\"&\"", "\"|\"", "\"^\"", "\"%\"", "\"<<\"", "\"+=\"", "\"-=\"", "\"*=\"", "\"/=\"", "\"&=\"", "\"|=\"", "\"^=\"", "\"%=\"", "\"<<=\"", "\">>=\"", "\">>>=\"", "\"...\"", "\"->\"", "\"::\"", "\">>>\"", "\">>\"", "\">\"", "\"\\u001a\""};
}
