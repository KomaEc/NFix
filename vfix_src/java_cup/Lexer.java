package java_cup;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java_cup.runtime.ComplexSymbolFactory;
import java_cup.runtime.Scanner;
import java_cup.runtime.Symbol;

public class Lexer implements sym, Scanner {
   public static final int YYEOF = -1;
   private static final int YY_BUFFERSIZE = 16384;
   public static final int CODESEG = 1;
   public static final int YYINITIAL = 0;
   private static final String yycmap_packed = "\t\u0007\u0001\u0003\u0001\u0002\u0001\u0000\u0001\u0003\u0001\u0001\u000e\u0007\u0004\u0000\u0001\u0003\u0003\u0000\u0001\u0006\u0001\u0011\u0004\u0000\u0001\u0005\u0001\u0000\u0001\n\u0001\u0000\u0001\u000b\u0001\u0004\n\u0007\u0001\u000f\u0001\t\u0001\u0017\u0001\u0010\u0001\u0016\u0001\b\u0001\u0000\u001a\u0006\u0001\r\u0001\u0000\u0001\u000e\u0001\u0000\u0001\u0006\u0001\u0000\u0001\u0019\u0001\u0006\u0001\u0015\u0001\"\u0001\u0014\u0001&\u0001\u001b\u0001%\u0001\u001c\u0001\u0006\u0001\u001a\u0001 \u0001\u001d\u0001#\u0001\u001e\u0001\u0012\u0001\u0006\u0001\u0013\u0001!\u0001\u001f\u0001(\u0001\u0006\u0001$\u0001'\u0002\u0006\u0001\u0018\u0001\f\u0001)\u0001\u0000!\u0007\u0002\u0000\u0004\u0006\u0004\u0000\u0001\u0006\u0002\u0000\u0001\u0007\u0007\u0000\u0001\u0006\u0004\u0000\u0001\u0006\u0005\u0000\u0017\u0006\u0001\u0000\u001f\u0006\u0001\u0000Ǌ\u0006\u0004\u0000\f\u0006\u000e\u0000\u0005\u0006\u0007\u0000\u0001\u0006\u0001\u0000\u0001\u0006\u0011\u0000p\u0007\u0005\u0006\u0001\u0000\u0002\u0006\u0002\u0000\u0004\u0006\b\u0000\u0001\u0006\u0001\u0000\u0003\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0014\u0006\u0001\u0000S\u0006\u0001\u0000\u008b\u0006\u0001\u0000\u0005\u0007\u0002\u0000\u009e\u0006\t\u0000&\u0006\u0002\u0000\u0001\u0006\u0007\u0000'\u0006\t\u0000-\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\b\u0000\u001b\u0006\u0005\u0000\u0003\u0006\r\u0000\u0004\u0007\u0007\u0000\u0001\u0006\u0004\u0000\u000b\u0007\u0005\u0000+\u0006\u001f\u0007\u0004\u0000\u0002\u0006\u0001\u0007c\u0006\u0001\u0000\u0001\u0006\b\u0007\u0001\u0000\u0006\u0007\u0002\u0006\u0002\u0007\u0001\u0000\u0004\u0007\u0002\u0006\n\u0007\u0003\u0006\u0002\u0000\u0001\u0006\u000f\u0000\u0001\u0007\u0001\u0006\u0001\u0007\u001e\u0006\u001b\u0007\u0002\u0000Y\u0006\u000b\u0007\u0001\u0006\u000e\u0000\n\u0007!\u0006\t\u0007\u0002\u0006\u0004\u0000\u0001\u0006\u0005\u0000\u0016\u0006\u0004\u0007\u0001\u0006\t\u0007\u0001\u0006\u0003\u0007\u0001\u0006\u0005\u0007\u0012\u0000\u0019\u0006\u0003\u0007¤\u0000\u0004\u00076\u0006\u0003\u0007\u0001\u0006\u0012\u0007\u0001\u0006\u0007\u0007\n\u0006\u0002\u0007\u0002\u0000\n\u0007\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0003\u0007\u0001\u0000\b\u0006\u0002\u0000\u0002\u0006\u0002\u0000\u0016\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0001\u0006\u0003\u0000\u0004\u0006\u0002\u0000\u0001\u0007\u0001\u0006\u0007\u0007\u0002\u0000\u0002\u0007\u0002\u0000\u0003\u0007\u0001\u0006\b\u0000\u0001\u0007\u0004\u0000\u0002\u0006\u0001\u0000\u0003\u0006\u0002\u0007\u0002\u0000\n\u0007\u0004\u0006\u0007\u0000\u0001\u0006\u0005\u0000\u0003\u0007\u0001\u0000\u0006\u0006\u0004\u0000\u0002\u0006\u0002\u0000\u0016\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0002\u0006\u0001\u0000\u0002\u0006\u0001\u0000\u0002\u0006\u0002\u0000\u0001\u0007\u0001\u0000\u0005\u0007\u0004\u0000\u0002\u0007\u0002\u0000\u0003\u0007\u0003\u0000\u0001\u0007\u0007\u0000\u0004\u0006\u0001\u0000\u0001\u0006\u0007\u0000\f\u0007\u0003\u0006\u0001\u0007\u000b\u0000\u0003\u0007\u0001\u0000\t\u0006\u0001\u0000\u0003\u0006\u0001\u0000\u0016\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0002\u0006\u0001\u0000\u0005\u0006\u0002\u0000\u0001\u0007\u0001\u0006\b\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0003\u0007\u0002\u0000\u0001\u0006\u000f\u0000\u0002\u0006\u0002\u0007\u0002\u0000\n\u0007\u0001\u0000\u0001\u0006\u000f\u0000\u0003\u0007\u0001\u0000\b\u0006\u0002\u0000\u0002\u0006\u0002\u0000\u0016\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0002\u0006\u0001\u0000\u0005\u0006\u0002\u0000\u0001\u0007\u0001\u0006\u0007\u0007\u0002\u0000\u0002\u0007\u0002\u0000\u0003\u0007\b\u0000\u0002\u0007\u0004\u0000\u0002\u0006\u0001\u0000\u0003\u0006\u0002\u0007\u0002\u0000\n\u0007\u0001\u0000\u0001\u0006\u0010\u0000\u0001\u0007\u0001\u0006\u0001\u0000\u0006\u0006\u0003\u0000\u0003\u0006\u0001\u0000\u0004\u0006\u0003\u0000\u0002\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0002\u0006\u0003\u0000\u0002\u0006\u0003\u0000\u0003\u0006\u0003\u0000\f\u0006\u0004\u0000\u0005\u0007\u0003\u0000\u0003\u0007\u0001\u0000\u0004\u0007\u0002\u0000\u0001\u0006\u0006\u0000\u0001\u0007\u000e\u0000\n\u0007\t\u0000\u0001\u0006\u0007\u0000\u0003\u0007\u0001\u0000\b\u0006\u0001\u0000\u0003\u0006\u0001\u0000\u0017\u0006\u0001\u0000\n\u0006\u0001\u0000\u0005\u0006\u0003\u0000\u0001\u0006\u0007\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0004\u0007\u0007\u0000\u0002\u0007\u0001\u0000\u0002\u0006\u0006\u0000\u0002\u0006\u0002\u0007\u0002\u0000\n\u0007\u0012\u0000\u0002\u0007\u0001\u0000\b\u0006\u0001\u0000\u0003\u0006\u0001\u0000\u0017\u0006\u0001\u0000\n\u0006\u0001\u0000\u0005\u0006\u0002\u0000\u0001\u0007\u0001\u0006\u0007\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0004\u0007\u0007\u0000\u0002\u0007\u0007\u0000\u0001\u0006\u0001\u0000\u0002\u0006\u0002\u0007\u0002\u0000\n\u0007\u0001\u0000\u0002\u0006\u000f\u0000\u0002\u0007\u0001\u0000\b\u0006\u0001\u0000\u0003\u0006\u0001\u0000)\u0006\u0002\u0000\u0001\u0006\u0007\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0004\u0007\u0001\u0006\b\u0000\u0001\u0007\b\u0000\u0002\u0006\u0002\u0007\u0002\u0000\n\u0007\n\u0000\u0006\u0006\u0002\u0000\u0002\u0007\u0001\u0000\u0012\u0006\u0003\u0000\u0018\u0006\u0001\u0000\t\u0006\u0001\u0000\u0001\u0006\u0002\u0000\u0007\u0006\u0003\u0000\u0001\u0007\u0004\u0000\u0006\u0007\u0001\u0000\u0001\u0007\u0001\u0000\b\u0007\u0012\u0000\u0002\u0007\r\u00000\u0006\u0001\u0007\u0002\u0006\u0007\u0007\u0004\u0000\b\u0006\b\u0007\u0001\u0000\n\u0007'\u0000\u0002\u0006\u0001\u0000\u0001\u0006\u0002\u0000\u0002\u0006\u0001\u0000\u0001\u0006\u0002\u0000\u0001\u0006\u0006\u0000\u0004\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0003\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0001\u0006\u0002\u0000\u0002\u0006\u0001\u0000\u0004\u0006\u0001\u0007\u0002\u0006\u0006\u0007\u0001\u0000\u0002\u0007\u0001\u0006\u0002\u0000\u0005\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0006\u0007\u0002\u0000\n\u0007\u0002\u0000\u0002\u0006\"\u0000\u0001\u0006\u0017\u0000\u0002\u0007\u0006\u0000\n\u0007\u000b\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0004\u0000\u0002\u0007\b\u0006\u0001\u0000$\u0006\u0004\u0000\u0014\u0007\u0001\u0000\u0002\u0007\u0005\u0006\u000b\u0007\u0001\u0000$\u0007\t\u0000\u0001\u00079\u0000+\u0006\u0014\u0007\u0001\u0006\n\u0007\u0006\u0000\u0006\u0006\u0004\u0007\u0004\u0006\u0003\u0007\u0001\u0006\u0003\u0007\u0002\u0006\u0007\u0007\u0003\u0006\u0004\u0007\r\u0006\f\u0007\u0001\u0006\u000f\u0007\u0002\u0000&\u0006\n\u0000+\u0006\u0001\u0000\u0001\u0006\u0003\u0000ŉ\u0006\u0001\u0000\u0004\u0006\u0002\u0000\u0007\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0004\u0006\u0002\u0000)\u0006\u0001\u0000\u0004\u0006\u0002\u0000!\u0006\u0001\u0000\u0004\u0006\u0002\u0000\u0007\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0004\u0006\u0002\u0000\u000f\u0006\u0001\u00009\u0006\u0001\u0000\u0004\u0006\u0002\u0000C\u0006\u0002\u0000\u0003\u0007 \u0000\u0010\u0006\u0010\u0000U\u0006\f\u0000ɬ\u0006\u0002\u0000\u0011\u0006\u0001\u0000\u001a\u0006\u0005\u0000K\u0006\u0003\u0000\u0003\u0006\u000f\u0000\r\u0006\u0001\u0000\u0004\u0006\u0003\u0007\u000b\u0000\u0012\u0006\u0003\u0007\u000b\u0000\u0012\u0006\u0002\u0007\f\u0000\r\u0006\u0001\u0000\u0003\u0006\u0001\u0000\u0002\u0007\f\u00004\u0006 \u0007\u0003\u0000\u0001\u0006\u0003\u0000\u0002\u0006\u0001\u0007\u0002\u0000\n\u0007!\u0000\u0003\u0007\u0002\u0000\n\u0007\u0006\u0000X\u0006\b\u0000)\u0006\u0001\u0007\u0001\u0006\u0005\u0000F\u0006\n\u0000\u001d\u0006\u0003\u0000\f\u0007\u0004\u0000\f\u0007\n\u0000\n\u0007\u001e\u0006\u0002\u0000\u0005\u0006\u000b\u0000,\u0006\u0004\u0000\u0011\u0007\u0007\u0006\u0002\u0007\u0006\u0000\n\u0007&\u0000\u0017\u0006\u0005\u0007\u0004\u00005\u0006\n\u0007\u0001\u0000\u001d\u0007\u0002\u0000\u000b\u0007\u0006\u0000\n\u0007\r\u0000\u0001\u0006X\u0000\u0005\u0007/\u0006\u0011\u0007\u0007\u0006\u0004\u0000\n\u0007\u0011\u0000\t\u0007\f\u0000\u0003\u0007\u001e\u0006\n\u0007\u0003\u0000\u0002\u0006\n\u0007\u0006\u0000&\u0006\u000e\u0007\f\u0000$\u0006\u0014\u0007\b\u0000\n\u0007\u0003\u0000\u0003\u0006\n\u0007$\u0006R\u0000\u0003\u0007\u0001\u0000\u0015\u0007\u0004\u0006\u0001\u0007\u0004\u0006\u0001\u0007\r\u0000À\u0006'\u0007\u0015\u0000\u0004\u0007Ė\u0006\u0002\u0000\u0006\u0006\u0002\u0000&\u0006\u0002\u0000\u0006\u0006\u0002\u0000\b\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u001f\u0006\u0002\u00005\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0001\u0006\u0003\u0000\u0003\u0006\u0001\u0000\u0007\u0006\u0003\u0000\u0004\u0006\u0002\u0000\u0006\u0006\u0004\u0000\r\u0006\u0005\u0000\u0003\u0006\u0001\u0000\u0007\u0006\u000e\u0000\u0005\u0007\u001a\u0000\u0005\u0007\u0010\u0000\u0002\u0006\u0013\u0000\u0001\u0006\u000b\u0000\u0005\u0007\u0005\u0000\u0006\u0007\u0001\u0000\u0001\u0006\r\u0000\u0001\u0006\u0010\u0000\r\u0006\u0003\u0000\u001a\u0006\u0016\u0000\r\u0007\u0004\u0000\u0001\u0007\u0003\u0000\f\u0007\u0011\u0000\u0001\u0006\u0004\u0000\u0001\u0006\u0002\u0000\n\u0006\u0001\u0000\u0001\u0006\u0003\u0000\u0005\u0006\u0006\u0000\u0001\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0004\u0006\u0001\u0000\u000b\u0006\u0002\u0000\u0004\u0006\u0005\u0000\u0005\u0006\u0004\u0000\u0001\u0006\u0011\u0000)\u0006\u0a77\u0000/\u0006\u0001\u0000/\u0006\u0001\u0000\u0085\u0006\u0006\u0000\u0004\u0006\u0003\u0007\u000e\u0000&\u0006\n\u00006\u0006\t\u0000\u0001\u0006\u000f\u0000\u0001\u0007\u0017\u0006\t\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000 \u0007/\u0000\u0001\u0006Ǖ\u0000\u0003\u0006\u0019\u0000\t\u0006\u0006\u0007\u0001\u0000\u0005\u0006\u0002\u0000\u0005\u0006\u0004\u0000V\u0006\u0002\u0000\u0002\u0007\u0002\u0000\u0003\u0006\u0001\u0000Z\u0006\u0001\u0000\u0004\u0006\u0005\u0000)\u0006\u0003\u0000^\u0006\u0011\u0000\u001b\u00065\u0000\u0010\u0006Ȁ\u0000ᦶ\u0006J\u0000凌\u00064\u0000ҍ\u0006C\u0000.\u0006\u0002\u0000č\u0006\u0003\u0000\u0010\u0006\n\u0007\u0002\u0006\u0014\u0000/\u0006\u0001\u0007\f\u0000\u0002\u0007\u0001\u0000\u0019\u0006\b\u0000P\u0006\u0002\u0007%\u0000\t\u0006\u0002\u0000g\u0006\u0002\u0000\u0004\u0006\u0001\u0000\u0002\u0006\u000e\u0000\n\u0006P\u0000\b\u0006\u0001\u0007\u0003\u0006\u0001\u0007\u0004\u0006\u0001\u0007\u0017\u0006\u0005\u0007\u0010\u0000\u0001\u0006\u0007\u00004\u0006\f\u0000\u0002\u00072\u0006\u0011\u0007\u000b\u0000\n\u0007\u0006\u0000\u0012\u0007\u0006\u0006\u0003\u0000\u0001\u0006\u0004\u0000\n\u0007\u001c\u0006\b\u0007\u0002\u0000\u0017\u0006\r\u0007\f\u0000\u001d\u0006\u0003\u0000\u0004\u0007/\u0006\u000e\u0007\u000e\u0000\u0001\u0006\n\u0007&\u0000)\u0006\u000e\u0007\t\u0000\u0003\u0006\u0001\u0007\b\u0006\u0002\u0007\u0002\u0000\n\u0007\u0006\u0000\u0017\u0006\u0003\u0000\u0001\u0006\u0001\u0007\u0004\u00000\u0006\u0001\u0007\u0001\u0006\u0003\u0007\u0002\u0006\u0002\u0007\u0005\u0006\u0002\u0007\u0001\u0006\u0001\u0007\u0001\u0006\u0018\u0000\u0003\u0006#\u0000\u0006\u0006\u0002\u0000\u0006\u0006\u0002\u0000\u0006\u0006\t\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0091\u0000#\u0006\b\u0007\u0001\u0000\u0002\u0007\u0002\u0000\n\u0007\u0006\u0000\u2ba4\u0006\f\u0000\u0017\u0006\u0004\u00001\u0006℄\u0000Į\u0006\u0002\u0000>\u0006\u0002\u0000j\u0006&\u0000\u0007\u0006\f\u0000\u0005\u0006\u0005\u0000\u0001\u0006\u0001\u0007\n\u0006\u0001\u0000\r\u0006\u0001\u0000\u0005\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0002\u0006\u0001\u0000\u0002\u0006\u0001\u0000l\u0006!\u0000ū\u0006\u0012\u0000@\u0006\u0002\u00006\u0006(\u0000\r\u0006\u0003\u0000\u0010\u0007\u0010\u0000\u0007\u0007\f\u0000\u0002\u0006\u0018\u0000\u0003\u0006\u0019\u0000\u0001\u0006\u0006\u0000\u0005\u0006\u0001\u0000\u0087\u0006\u0002\u0000\u0001\u0007\u0004\u0000\u0001\u0006\u000b\u0000\n\u0007\u0007\u0000\u001a\u0006\u0004\u0000\u0001\u0006\u0001\u0000\u001a\u0006\u000b\u0000Y\u0006\u0003\u0000\u0006\u0006\u0002\u0000\u0006\u0006\u0002\u0000\u0006\u0006\u0002\u0000\u0003\u0006\u0003\u0000\u0002\u0006\u0003\u0000\u0002\u0006\u0012\u0000\u0003\u0007\u0004\u0000";
   private static final char[] yycmap = yy_unpack_cmap("\t\u0007\u0001\u0003\u0001\u0002\u0001\u0000\u0001\u0003\u0001\u0001\u000e\u0007\u0004\u0000\u0001\u0003\u0003\u0000\u0001\u0006\u0001\u0011\u0004\u0000\u0001\u0005\u0001\u0000\u0001\n\u0001\u0000\u0001\u000b\u0001\u0004\n\u0007\u0001\u000f\u0001\t\u0001\u0017\u0001\u0010\u0001\u0016\u0001\b\u0001\u0000\u001a\u0006\u0001\r\u0001\u0000\u0001\u000e\u0001\u0000\u0001\u0006\u0001\u0000\u0001\u0019\u0001\u0006\u0001\u0015\u0001\"\u0001\u0014\u0001&\u0001\u001b\u0001%\u0001\u001c\u0001\u0006\u0001\u001a\u0001 \u0001\u001d\u0001#\u0001\u001e\u0001\u0012\u0001\u0006\u0001\u0013\u0001!\u0001\u001f\u0001(\u0001\u0006\u0001$\u0001'\u0002\u0006\u0001\u0018\u0001\f\u0001)\u0001\u0000!\u0007\u0002\u0000\u0004\u0006\u0004\u0000\u0001\u0006\u0002\u0000\u0001\u0007\u0007\u0000\u0001\u0006\u0004\u0000\u0001\u0006\u0005\u0000\u0017\u0006\u0001\u0000\u001f\u0006\u0001\u0000Ǌ\u0006\u0004\u0000\f\u0006\u000e\u0000\u0005\u0006\u0007\u0000\u0001\u0006\u0001\u0000\u0001\u0006\u0011\u0000p\u0007\u0005\u0006\u0001\u0000\u0002\u0006\u0002\u0000\u0004\u0006\b\u0000\u0001\u0006\u0001\u0000\u0003\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0014\u0006\u0001\u0000S\u0006\u0001\u0000\u008b\u0006\u0001\u0000\u0005\u0007\u0002\u0000\u009e\u0006\t\u0000&\u0006\u0002\u0000\u0001\u0006\u0007\u0000'\u0006\t\u0000-\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\b\u0000\u001b\u0006\u0005\u0000\u0003\u0006\r\u0000\u0004\u0007\u0007\u0000\u0001\u0006\u0004\u0000\u000b\u0007\u0005\u0000+\u0006\u001f\u0007\u0004\u0000\u0002\u0006\u0001\u0007c\u0006\u0001\u0000\u0001\u0006\b\u0007\u0001\u0000\u0006\u0007\u0002\u0006\u0002\u0007\u0001\u0000\u0004\u0007\u0002\u0006\n\u0007\u0003\u0006\u0002\u0000\u0001\u0006\u000f\u0000\u0001\u0007\u0001\u0006\u0001\u0007\u001e\u0006\u001b\u0007\u0002\u0000Y\u0006\u000b\u0007\u0001\u0006\u000e\u0000\n\u0007!\u0006\t\u0007\u0002\u0006\u0004\u0000\u0001\u0006\u0005\u0000\u0016\u0006\u0004\u0007\u0001\u0006\t\u0007\u0001\u0006\u0003\u0007\u0001\u0006\u0005\u0007\u0012\u0000\u0019\u0006\u0003\u0007¤\u0000\u0004\u00076\u0006\u0003\u0007\u0001\u0006\u0012\u0007\u0001\u0006\u0007\u0007\n\u0006\u0002\u0007\u0002\u0000\n\u0007\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0003\u0007\u0001\u0000\b\u0006\u0002\u0000\u0002\u0006\u0002\u0000\u0016\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0001\u0006\u0003\u0000\u0004\u0006\u0002\u0000\u0001\u0007\u0001\u0006\u0007\u0007\u0002\u0000\u0002\u0007\u0002\u0000\u0003\u0007\u0001\u0006\b\u0000\u0001\u0007\u0004\u0000\u0002\u0006\u0001\u0000\u0003\u0006\u0002\u0007\u0002\u0000\n\u0007\u0004\u0006\u0007\u0000\u0001\u0006\u0005\u0000\u0003\u0007\u0001\u0000\u0006\u0006\u0004\u0000\u0002\u0006\u0002\u0000\u0016\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0002\u0006\u0001\u0000\u0002\u0006\u0001\u0000\u0002\u0006\u0002\u0000\u0001\u0007\u0001\u0000\u0005\u0007\u0004\u0000\u0002\u0007\u0002\u0000\u0003\u0007\u0003\u0000\u0001\u0007\u0007\u0000\u0004\u0006\u0001\u0000\u0001\u0006\u0007\u0000\f\u0007\u0003\u0006\u0001\u0007\u000b\u0000\u0003\u0007\u0001\u0000\t\u0006\u0001\u0000\u0003\u0006\u0001\u0000\u0016\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0002\u0006\u0001\u0000\u0005\u0006\u0002\u0000\u0001\u0007\u0001\u0006\b\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0003\u0007\u0002\u0000\u0001\u0006\u000f\u0000\u0002\u0006\u0002\u0007\u0002\u0000\n\u0007\u0001\u0000\u0001\u0006\u000f\u0000\u0003\u0007\u0001\u0000\b\u0006\u0002\u0000\u0002\u0006\u0002\u0000\u0016\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0002\u0006\u0001\u0000\u0005\u0006\u0002\u0000\u0001\u0007\u0001\u0006\u0007\u0007\u0002\u0000\u0002\u0007\u0002\u0000\u0003\u0007\b\u0000\u0002\u0007\u0004\u0000\u0002\u0006\u0001\u0000\u0003\u0006\u0002\u0007\u0002\u0000\n\u0007\u0001\u0000\u0001\u0006\u0010\u0000\u0001\u0007\u0001\u0006\u0001\u0000\u0006\u0006\u0003\u0000\u0003\u0006\u0001\u0000\u0004\u0006\u0003\u0000\u0002\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0002\u0006\u0003\u0000\u0002\u0006\u0003\u0000\u0003\u0006\u0003\u0000\f\u0006\u0004\u0000\u0005\u0007\u0003\u0000\u0003\u0007\u0001\u0000\u0004\u0007\u0002\u0000\u0001\u0006\u0006\u0000\u0001\u0007\u000e\u0000\n\u0007\t\u0000\u0001\u0006\u0007\u0000\u0003\u0007\u0001\u0000\b\u0006\u0001\u0000\u0003\u0006\u0001\u0000\u0017\u0006\u0001\u0000\n\u0006\u0001\u0000\u0005\u0006\u0003\u0000\u0001\u0006\u0007\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0004\u0007\u0007\u0000\u0002\u0007\u0001\u0000\u0002\u0006\u0006\u0000\u0002\u0006\u0002\u0007\u0002\u0000\n\u0007\u0012\u0000\u0002\u0007\u0001\u0000\b\u0006\u0001\u0000\u0003\u0006\u0001\u0000\u0017\u0006\u0001\u0000\n\u0006\u0001\u0000\u0005\u0006\u0002\u0000\u0001\u0007\u0001\u0006\u0007\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0004\u0007\u0007\u0000\u0002\u0007\u0007\u0000\u0001\u0006\u0001\u0000\u0002\u0006\u0002\u0007\u0002\u0000\n\u0007\u0001\u0000\u0002\u0006\u000f\u0000\u0002\u0007\u0001\u0000\b\u0006\u0001\u0000\u0003\u0006\u0001\u0000)\u0006\u0002\u0000\u0001\u0006\u0007\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0004\u0007\u0001\u0006\b\u0000\u0001\u0007\b\u0000\u0002\u0006\u0002\u0007\u0002\u0000\n\u0007\n\u0000\u0006\u0006\u0002\u0000\u0002\u0007\u0001\u0000\u0012\u0006\u0003\u0000\u0018\u0006\u0001\u0000\t\u0006\u0001\u0000\u0001\u0006\u0002\u0000\u0007\u0006\u0003\u0000\u0001\u0007\u0004\u0000\u0006\u0007\u0001\u0000\u0001\u0007\u0001\u0000\b\u0007\u0012\u0000\u0002\u0007\r\u00000\u0006\u0001\u0007\u0002\u0006\u0007\u0007\u0004\u0000\b\u0006\b\u0007\u0001\u0000\n\u0007'\u0000\u0002\u0006\u0001\u0000\u0001\u0006\u0002\u0000\u0002\u0006\u0001\u0000\u0001\u0006\u0002\u0000\u0001\u0006\u0006\u0000\u0004\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0003\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0001\u0006\u0002\u0000\u0002\u0006\u0001\u0000\u0004\u0006\u0001\u0007\u0002\u0006\u0006\u0007\u0001\u0000\u0002\u0007\u0001\u0006\u0002\u0000\u0005\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0006\u0007\u0002\u0000\n\u0007\u0002\u0000\u0002\u0006\"\u0000\u0001\u0006\u0017\u0000\u0002\u0007\u0006\u0000\n\u0007\u000b\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0004\u0000\u0002\u0007\b\u0006\u0001\u0000$\u0006\u0004\u0000\u0014\u0007\u0001\u0000\u0002\u0007\u0005\u0006\u000b\u0007\u0001\u0000$\u0007\t\u0000\u0001\u00079\u0000+\u0006\u0014\u0007\u0001\u0006\n\u0007\u0006\u0000\u0006\u0006\u0004\u0007\u0004\u0006\u0003\u0007\u0001\u0006\u0003\u0007\u0002\u0006\u0007\u0007\u0003\u0006\u0004\u0007\r\u0006\f\u0007\u0001\u0006\u000f\u0007\u0002\u0000&\u0006\n\u0000+\u0006\u0001\u0000\u0001\u0006\u0003\u0000ŉ\u0006\u0001\u0000\u0004\u0006\u0002\u0000\u0007\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0004\u0006\u0002\u0000)\u0006\u0001\u0000\u0004\u0006\u0002\u0000!\u0006\u0001\u0000\u0004\u0006\u0002\u0000\u0007\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0004\u0006\u0002\u0000\u000f\u0006\u0001\u00009\u0006\u0001\u0000\u0004\u0006\u0002\u0000C\u0006\u0002\u0000\u0003\u0007 \u0000\u0010\u0006\u0010\u0000U\u0006\f\u0000ɬ\u0006\u0002\u0000\u0011\u0006\u0001\u0000\u001a\u0006\u0005\u0000K\u0006\u0003\u0000\u0003\u0006\u000f\u0000\r\u0006\u0001\u0000\u0004\u0006\u0003\u0007\u000b\u0000\u0012\u0006\u0003\u0007\u000b\u0000\u0012\u0006\u0002\u0007\f\u0000\r\u0006\u0001\u0000\u0003\u0006\u0001\u0000\u0002\u0007\f\u00004\u0006 \u0007\u0003\u0000\u0001\u0006\u0003\u0000\u0002\u0006\u0001\u0007\u0002\u0000\n\u0007!\u0000\u0003\u0007\u0002\u0000\n\u0007\u0006\u0000X\u0006\b\u0000)\u0006\u0001\u0007\u0001\u0006\u0005\u0000F\u0006\n\u0000\u001d\u0006\u0003\u0000\f\u0007\u0004\u0000\f\u0007\n\u0000\n\u0007\u001e\u0006\u0002\u0000\u0005\u0006\u000b\u0000,\u0006\u0004\u0000\u0011\u0007\u0007\u0006\u0002\u0007\u0006\u0000\n\u0007&\u0000\u0017\u0006\u0005\u0007\u0004\u00005\u0006\n\u0007\u0001\u0000\u001d\u0007\u0002\u0000\u000b\u0007\u0006\u0000\n\u0007\r\u0000\u0001\u0006X\u0000\u0005\u0007/\u0006\u0011\u0007\u0007\u0006\u0004\u0000\n\u0007\u0011\u0000\t\u0007\f\u0000\u0003\u0007\u001e\u0006\n\u0007\u0003\u0000\u0002\u0006\n\u0007\u0006\u0000&\u0006\u000e\u0007\f\u0000$\u0006\u0014\u0007\b\u0000\n\u0007\u0003\u0000\u0003\u0006\n\u0007$\u0006R\u0000\u0003\u0007\u0001\u0000\u0015\u0007\u0004\u0006\u0001\u0007\u0004\u0006\u0001\u0007\r\u0000À\u0006'\u0007\u0015\u0000\u0004\u0007Ė\u0006\u0002\u0000\u0006\u0006\u0002\u0000&\u0006\u0002\u0000\u0006\u0006\u0002\u0000\b\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u001f\u0006\u0002\u00005\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0001\u0006\u0003\u0000\u0003\u0006\u0001\u0000\u0007\u0006\u0003\u0000\u0004\u0006\u0002\u0000\u0006\u0006\u0004\u0000\r\u0006\u0005\u0000\u0003\u0006\u0001\u0000\u0007\u0006\u000e\u0000\u0005\u0007\u001a\u0000\u0005\u0007\u0010\u0000\u0002\u0006\u0013\u0000\u0001\u0006\u000b\u0000\u0005\u0007\u0005\u0000\u0006\u0007\u0001\u0000\u0001\u0006\r\u0000\u0001\u0006\u0010\u0000\r\u0006\u0003\u0000\u001a\u0006\u0016\u0000\r\u0007\u0004\u0000\u0001\u0007\u0003\u0000\f\u0007\u0011\u0000\u0001\u0006\u0004\u0000\u0001\u0006\u0002\u0000\n\u0006\u0001\u0000\u0001\u0006\u0003\u0000\u0005\u0006\u0006\u0000\u0001\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0004\u0006\u0001\u0000\u000b\u0006\u0002\u0000\u0004\u0006\u0005\u0000\u0005\u0006\u0004\u0000\u0001\u0006\u0011\u0000)\u0006\u0a77\u0000/\u0006\u0001\u0000/\u0006\u0001\u0000\u0085\u0006\u0006\u0000\u0004\u0006\u0003\u0007\u000e\u0000&\u0006\n\u00006\u0006\t\u0000\u0001\u0006\u000f\u0000\u0001\u0007\u0017\u0006\t\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0001\u0000 \u0007/\u0000\u0001\u0006Ǖ\u0000\u0003\u0006\u0019\u0000\t\u0006\u0006\u0007\u0001\u0000\u0005\u0006\u0002\u0000\u0005\u0006\u0004\u0000V\u0006\u0002\u0000\u0002\u0007\u0002\u0000\u0003\u0006\u0001\u0000Z\u0006\u0001\u0000\u0004\u0006\u0005\u0000)\u0006\u0003\u0000^\u0006\u0011\u0000\u001b\u00065\u0000\u0010\u0006Ȁ\u0000ᦶ\u0006J\u0000凌\u00064\u0000ҍ\u0006C\u0000.\u0006\u0002\u0000č\u0006\u0003\u0000\u0010\u0006\n\u0007\u0002\u0006\u0014\u0000/\u0006\u0001\u0007\f\u0000\u0002\u0007\u0001\u0000\u0019\u0006\b\u0000P\u0006\u0002\u0007%\u0000\t\u0006\u0002\u0000g\u0006\u0002\u0000\u0004\u0006\u0001\u0000\u0002\u0006\u000e\u0000\n\u0006P\u0000\b\u0006\u0001\u0007\u0003\u0006\u0001\u0007\u0004\u0006\u0001\u0007\u0017\u0006\u0005\u0007\u0010\u0000\u0001\u0006\u0007\u00004\u0006\f\u0000\u0002\u00072\u0006\u0011\u0007\u000b\u0000\n\u0007\u0006\u0000\u0012\u0007\u0006\u0006\u0003\u0000\u0001\u0006\u0004\u0000\n\u0007\u001c\u0006\b\u0007\u0002\u0000\u0017\u0006\r\u0007\f\u0000\u001d\u0006\u0003\u0000\u0004\u0007/\u0006\u000e\u0007\u000e\u0000\u0001\u0006\n\u0007&\u0000)\u0006\u000e\u0007\t\u0000\u0003\u0006\u0001\u0007\b\u0006\u0002\u0007\u0002\u0000\n\u0007\u0006\u0000\u0017\u0006\u0003\u0000\u0001\u0006\u0001\u0007\u0004\u00000\u0006\u0001\u0007\u0001\u0006\u0003\u0007\u0002\u0006\u0002\u0007\u0005\u0006\u0002\u0007\u0001\u0006\u0001\u0007\u0001\u0006\u0018\u0000\u0003\u0006#\u0000\u0006\u0006\u0002\u0000\u0006\u0006\u0002\u0000\u0006\u0006\t\u0000\u0007\u0006\u0001\u0000\u0007\u0006\u0091\u0000#\u0006\b\u0007\u0001\u0000\u0002\u0007\u0002\u0000\n\u0007\u0006\u0000\u2ba4\u0006\f\u0000\u0017\u0006\u0004\u00001\u0006℄\u0000Į\u0006\u0002\u0000>\u0006\u0002\u0000j\u0006&\u0000\u0007\u0006\f\u0000\u0005\u0006\u0005\u0000\u0001\u0006\u0001\u0007\n\u0006\u0001\u0000\r\u0006\u0001\u0000\u0005\u0006\u0001\u0000\u0001\u0006\u0001\u0000\u0002\u0006\u0001\u0000\u0002\u0006\u0001\u0000l\u0006!\u0000ū\u0006\u0012\u0000@\u0006\u0002\u00006\u0006(\u0000\r\u0006\u0003\u0000\u0010\u0007\u0010\u0000\u0007\u0007\f\u0000\u0002\u0006\u0018\u0000\u0003\u0006\u0019\u0000\u0001\u0006\u0006\u0000\u0005\u0006\u0001\u0000\u0087\u0006\u0002\u0000\u0001\u0007\u0004\u0000\u0001\u0006\u000b\u0000\n\u0007\u0007\u0000\u001a\u0006\u0004\u0000\u0001\u0006\u0001\u0000\u001a\u0006\u000b\u0000Y\u0006\u0003\u0000\u0006\u0006\u0002\u0000\u0006\u0006\u0002\u0000\u0006\u0006\u0002\u0000\u0003\u0006\u0003\u0000\u0002\u0006\u0003\u0000\u0002\u0006\u0012\u0000\u0003\u0007\u0004\u0000");
   private static final int[] yy_rowMap = new int[]{0, 42, 84, 126, 84, 168, 84, 210, 84, 84, 84, 84, 84, 84, 84, 252, 294, 336, 378, 420, 462, 84, 84, 504, 546, 588, 630, 672, 714, 756, 798, 84, 840, 882, 924, 966, 1008, 1050, 1092, 1134, 1176, 1218, 1260, 84, 1302, 1344, 1386, 1428, 1470, 1512, 1554, 1596, 1638, 1680, 84, 1722, 84, 1764, 1806, 1848, 1890, 1932, 1974, 2016, 2058, 2100, 2142, 2184, 2226, 2268, 2310, 2352, 2394, 2436, 2478, 2520, 2562, 2604, 2646, 2688, 2730, 210, 2772, 2814, 2856, 210, 2898, 210, 210, 2940, 2982, 3024, 3066, 210, 84, 3108, 3150, 3192, 210, 3234, 210, 3276, 3318, 3360, 210, 210, 3402, 3444, 3486, 210, 3528, 3570, 210, 210, 3612, 3654, 3696, 3738, 210, 210, 3780, 3822, 3864, 3906, 210, 210, 3948, 3990, 4032, 210, 4074, 210};
   private static final String yy_packed0 = "\u0001\u0003\u0001\u0004\u0002\u0005\u0001\u0006\u0001\u0007\u0001\b\u0001\u0003\u0001\t\u0001\n\u0001\u000b\u0001\f\u0001\r\u0001\u000e\u0001\u000f\u0001\u0010\u0001\u0003\u0001\u0011\u0001\u0012\u0001\u0013\u0001\u0014\u0001\u0015\u0001\u0016\u0001\u0017\u0001\u0018\u0001\u0019\u0002\b\u0001\u001a\u0002\b\u0001\u001b\u0001\u001c\u0001\u001d\u0001\b\u0001\u001e\u0001\u001f\u0004\b\u0001\u0003\u000f \u0001!\u001a ,\u0000\u0001\u0005+\u0000\u0001\"\u0001#*\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0010\b\u0010\u0000\u0001$,\u0000\u0001%\u001d\u0000\u0002\b\n\u0000\u0001\b\u0001&\u0002\b\u0003\u0000\u0001'\u000f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0003\b\u0001(\f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u000e\b\u0001)\u0001\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0005\b\u0001*\u0001\b\u0001+\b\b\u0010\u0000\u0001, \u0000\u0002\b\n\u0000\u0003\b\u0001-\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0004\b\u0001.\u0005\b\u0001/\u0005\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u00010\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u00011\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0003\b\u00012\u0003\u0000\u0006\b\u00013\b\b\u00014\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0005\b\u00015\n\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0003\b\u00016\f\b*\u0000\u00017\u0001\"\u0001\u0004\u0001\u0005'\"\u0005#\u00018$#\u0010\u0000\u00019,\u0000\u0001:\u001c\u0000\u0002\b\n\u0000\u0002\b\u0001;\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001<\u0001\b\u0001=\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0002\b\u0001>\r\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001?\t\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\t\b\u0001@\u0006\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001A\u000f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001B\t\b\u0007\u0000\u0002\b\n\u0000\u0001C\u0003\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0003\b\u0001D\f\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001E\u0002\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\r\b\u0001F\u0002\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001G\u000f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001H\u000f\b\u0007\u0000\u0002\b\n\u0000\u0001I\u0003\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001J\u0005\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001K\t\b\u0001\u0000\u0004#\u0001\u0005\u00018$#\u0014\u0000\u0001L\u001b\u0000\u0002\b\n\u0000\u0003\b\u0001M\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\b\b\u0001N\u0007\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001\b\u0001O\u000e\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\f\b\u0001P\u0003\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001Q\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001R\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\b\b\u0001S\u0007\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0003\b\u0001T\f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0005\b\u0001U\n\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001V\t\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0004\b\u0001W\u000b\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001X\t\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001Y\u0005\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001Z\u0002\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001[\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001\\\u0005\b\u0001]\t\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\f\b\u0001^\u0003\b\u0016\u0000\u0001_\u001a\u0000\u0002\b\n\u0000\u0002\b\u0001`\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001a\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001b\u000f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001c\t\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001d\u0005\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\b\b\u0001e\u0007\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0005\b\u0001f\n\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001g\u0002\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0003\b\u0001h\f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001i\t\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001j\u0002\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\b\b\u0001k\u0007\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001l\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\t\b\u0001m\u0006\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001n\u0002\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0002\b\u0001o\r\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\t\b\u0001p\u0006\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001q\u0005\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001r\t\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001s\u0005\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\b\b\u0001t\u0007\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001u\u0002\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001v\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001w\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\b\b\u0001x\u0007\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001y\u000f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0005\b\u0001z\n\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0004\b\u0001{\u000b\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001|\u0005\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0007\b\u0001}\b\b\u0007\u0000\u0002\b\n\u0000\u0003\b\u0001~\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0003\b\u0001\u007f\f\b\u0007\u0000\u0002\b\n\u0000\u0003\b\u0001\u0080\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001\u0081\u0005\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001\u0082\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001\u0083\u000f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0007\b\u0001\u0084\b\b\u0001\u0000";
   private static final int[] yytrans = yy_unpack();
   private static final int YY_UNKNOWN_ERROR = 0;
   private static final int YY_ILLEGAL_STATE = 1;
   private static final int YY_NO_MATCH = 2;
   private static final int YY_PUSHBACK_2BIG = 3;
   private static final String[] YY_ERROR_MSG = new String[]{"Unkown internal scanner error", "Internal error: unknown state", "Error: could not match input", "Error: pushback value was too large"};
   private static final byte[] YY_ATTRIBUTE = new byte[]{0, 0, 9, 1, 9, 1, 9, 1, 9, 9, 9, 9, 9, 9, 9, 1, 1, 1, 1, 1, 1, 9, 9, 1, 1, 1, 1, 1, 1, 1, 1, 9, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 0, 9, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
   private Reader yy_reader;
   private int yy_state;
   private int yy_lexical_state;
   private char[] yy_buffer;
   private int yy_markedPos;
   private int yy_pushbackPos;
   private int yy_currentPos;
   private int yy_startRead;
   private int yy_endRead;
   private int yyline;
   private int yychar;
   private int yycolumn;
   private boolean yy_atBOL;
   private boolean yy_atEOF;
   private boolean yy_eof_done;
   private StringBuffer sb;
   private ComplexSymbolFactory symbolFactory;
   private int csline;
   private int cscolumn;

   public Lexer(ComplexSymbolFactory sf) {
      this((Reader)(new InputStreamReader(System.in)));
      this.symbolFactory = sf;
   }

   public Symbol symbol(String name, int code) {
      return this.symbolFactory.newSymbol(name, code, new ComplexSymbolFactory.Location(this.yyline + 1, this.yycolumn + 1 - this.yylength()), new ComplexSymbolFactory.Location(this.yyline + 1, this.yycolumn + 1));
   }

   public Symbol symbol(String name, int code, String lexem) {
      return this.symbolFactory.newSymbol(name, code, (ComplexSymbolFactory.Location)(new ComplexSymbolFactory.Location(this.yyline + 1, this.yycolumn + 1)), (ComplexSymbolFactory.Location)(new ComplexSymbolFactory.Location(this.yyline + 1, this.yycolumn + this.yylength())), lexem);
   }

   protected void emit_warning(String message) {
      ErrorManager.getManager().emit_warning("Scanner at " + (this.yyline + 1) + "(" + (this.yycolumn + 1) + "): " + message);
   }

   protected void emit_error(String message) {
      ErrorManager.getManager().emit_error("Scanner at " + (this.yyline + 1) + "(" + (this.yycolumn + 1) + "): " + message);
   }

   public Lexer(Reader in) {
      this.yy_lexical_state = 0;
      this.yy_buffer = new char[16384];
      this.yy_atBOL = true;
      this.yy_reader = in;
   }

   public Lexer(InputStream in) {
      this((Reader)(new InputStreamReader(in)));
   }

   private static int[] yy_unpack() {
      int[] trans = new int[4116];
      int offset = 0;
      yy_unpack("\u0001\u0003\u0001\u0004\u0002\u0005\u0001\u0006\u0001\u0007\u0001\b\u0001\u0003\u0001\t\u0001\n\u0001\u000b\u0001\f\u0001\r\u0001\u000e\u0001\u000f\u0001\u0010\u0001\u0003\u0001\u0011\u0001\u0012\u0001\u0013\u0001\u0014\u0001\u0015\u0001\u0016\u0001\u0017\u0001\u0018\u0001\u0019\u0002\b\u0001\u001a\u0002\b\u0001\u001b\u0001\u001c\u0001\u001d\u0001\b\u0001\u001e\u0001\u001f\u0004\b\u0001\u0003\u000f \u0001!\u001a ,\u0000\u0001\u0005+\u0000\u0001\"\u0001#*\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0010\b\u0010\u0000\u0001$,\u0000\u0001%\u001d\u0000\u0002\b\n\u0000\u0001\b\u0001&\u0002\b\u0003\u0000\u0001'\u000f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0003\b\u0001(\f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u000e\b\u0001)\u0001\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0005\b\u0001*\u0001\b\u0001+\b\b\u0010\u0000\u0001, \u0000\u0002\b\n\u0000\u0003\b\u0001-\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0004\b\u0001.\u0005\b\u0001/\u0005\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u00010\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u00011\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0003\b\u00012\u0003\u0000\u0006\b\u00013\b\b\u00014\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0005\b\u00015\n\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0003\b\u00016\f\b*\u0000\u00017\u0001\"\u0001\u0004\u0001\u0005'\"\u0005#\u00018$#\u0010\u0000\u00019,\u0000\u0001:\u001c\u0000\u0002\b\n\u0000\u0002\b\u0001;\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001<\u0001\b\u0001=\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0002\b\u0001>\r\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001?\t\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\t\b\u0001@\u0006\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001A\u000f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001B\t\b\u0007\u0000\u0002\b\n\u0000\u0001C\u0003\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0003\b\u0001D\f\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001E\u0002\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\r\b\u0001F\u0002\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001G\u000f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001H\u000f\b\u0007\u0000\u0002\b\n\u0000\u0001I\u0003\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001J\u0005\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001K\t\b\u0001\u0000\u0004#\u0001\u0005\u00018$#\u0014\u0000\u0001L\u001b\u0000\u0002\b\n\u0000\u0003\b\u0001M\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\b\b\u0001N\u0007\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001\b\u0001O\u000e\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\f\b\u0001P\u0003\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001Q\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001R\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\b\b\u0001S\u0007\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0003\b\u0001T\f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0005\b\u0001U\n\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001V\t\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0004\b\u0001W\u000b\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001X\t\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001Y\u0005\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001Z\u0002\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001[\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001\\\u0005\b\u0001]\t\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\f\b\u0001^\u0003\b\u0016\u0000\u0001_\u001a\u0000\u0002\b\n\u0000\u0002\b\u0001`\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001a\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001b\u000f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001c\t\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001d\u0005\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\b\b\u0001e\u0007\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0005\b\u0001f\n\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001g\u0002\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0003\b\u0001h\f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001i\t\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001j\u0002\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\b\b\u0001k\u0007\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001l\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\t\b\u0001m\u0006\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001n\u0002\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0002\b\u0001o\r\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\t\b\u0001p\u0006\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001q\u0005\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0006\b\u0001r\t\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001s\u0005\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\b\b\u0001t\u0007\b\u0007\u0000\u0002\b\n\u0000\u0001\b\u0001u\u0002\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001v\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001w\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\b\b\u0001x\u0007\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001y\u000f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0005\b\u0001z\n\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0004\b\u0001{\u000b\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001|\u0005\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0007\b\u0001}\b\b\u0007\u0000\u0002\b\n\u0000\u0003\b\u0001~\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0003\b\u0001\u007f\f\b\u0007\u0000\u0002\b\n\u0000\u0003\b\u0001\u0080\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\n\b\u0001\u0081\u0005\b\u0007\u0000\u0002\b\n\u0000\u0002\b\u0001\u0082\u0001\b\u0003\u0000\u0010\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0001\u0083\u000f\b\u0007\u0000\u0002\b\n\u0000\u0004\b\u0003\u0000\u0007\b\u0001\u0084\b\b\u0001\u0000", offset, trans);
      return trans;
   }

   private static int yy_unpack(String packed, int offset, int[] trans) {
      int i = 0;
      int j = offset;
      int l = packed.length();

      while(i < l) {
         int count = packed.charAt(i++);
         int value = packed.charAt(i++);
         int value = value - 1;

         while(true) {
            trans[j++] = value;
            --count;
            if (count <= 0) {
               break;
            }
         }
      }

      return j;
   }

   private static char[] yy_unpack_cmap(String packed) {
      char[] map = new char[65536];
      int i = 0;
      int var3 = 0;

      while(i < 2200) {
         int count = packed.charAt(i++);
         char value = packed.charAt(i++);

         while(true) {
            map[var3++] = value;
            --count;
            if (count <= 0) {
               break;
            }
         }
      }

      return map;
   }

   private boolean yy_refill() throws IOException {
      if (this.yy_startRead > 0) {
         System.arraycopy(this.yy_buffer, this.yy_startRead, this.yy_buffer, 0, this.yy_endRead - this.yy_startRead);
         this.yy_endRead -= this.yy_startRead;
         this.yy_currentPos -= this.yy_startRead;
         this.yy_markedPos -= this.yy_startRead;
         this.yy_pushbackPos -= this.yy_startRead;
         this.yy_startRead = 0;
      }

      if (this.yy_currentPos >= this.yy_buffer.length) {
         char[] newBuffer = new char[this.yy_currentPos * 2];
         System.arraycopy(this.yy_buffer, 0, newBuffer, 0, this.yy_buffer.length);
         this.yy_buffer = newBuffer;
      }

      int numRead = this.yy_reader.read(this.yy_buffer, this.yy_endRead, this.yy_buffer.length - this.yy_endRead);
      if (numRead < 0) {
         return true;
      } else {
         this.yy_endRead += numRead;
         return false;
      }
   }

   public final void yyclose() throws IOException {
      this.yy_atEOF = true;
      this.yy_endRead = this.yy_startRead;
      if (this.yy_reader != null) {
         this.yy_reader.close();
      }

   }

   public final void yyreset(Reader reader) throws IOException {
      this.yyclose();
      this.yy_reader = reader;
      this.yy_atBOL = true;
      this.yy_atEOF = false;
      this.yy_endRead = this.yy_startRead = 0;
      this.yy_currentPos = this.yy_markedPos = this.yy_pushbackPos = 0;
      this.yyline = this.yychar = this.yycolumn = 0;
      this.yy_lexical_state = 0;
   }

   public final int yystate() {
      return this.yy_lexical_state;
   }

   public final void yybegin(int newState) {
      this.yy_lexical_state = newState;
   }

   public final String yytext() {
      return new String(this.yy_buffer, this.yy_startRead, this.yy_markedPos - this.yy_startRead);
   }

   public final char yycharat(int pos) {
      return this.yy_buffer[this.yy_startRead + pos];
   }

   public final int yylength() {
      return this.yy_markedPos - this.yy_startRead;
   }

   private void yy_ScanError(int errorCode) {
      String message;
      try {
         message = YY_ERROR_MSG[errorCode];
      } catch (ArrayIndexOutOfBoundsException var4) {
         message = YY_ERROR_MSG[0];
      }

      throw new Error(message);
   }

   private void yypushback(int number) {
      if (number > this.yylength()) {
         this.yy_ScanError(3);
      }

      this.yy_markedPos -= number;
   }

   private void yy_do_eof() throws IOException {
      if (!this.yy_eof_done) {
         this.yy_eof_done = true;
         this.yyclose();
      }

   }

   public Symbol next_token() throws IOException {
      int yy_endRead_l = this.yy_endRead;
      char[] yy_buffer_l = this.yy_buffer;
      char[] yycmap_l = yycmap;
      int[] yytrans_l = yytrans;
      int[] yy_rowMap_l = yy_rowMap;
      byte[] yy_attr_l = YY_ATTRIBUTE;

      while(true) {
         int yy_markedPos_l = this.yy_markedPos;
         boolean yy_r = false;

         int yy_currentPos_l;
         for(yy_currentPos_l = this.yy_startRead; yy_currentPos_l < yy_markedPos_l; ++yy_currentPos_l) {
            switch(yy_buffer_l[yy_currentPos_l]) {
            case '\n':
               if (yy_r) {
                  yy_r = false;
               } else {
                  ++this.yyline;
                  this.yycolumn = 0;
               }
               break;
            case '\u000b':
            case '\f':
            case '\u0085':
            case '\u2028':
            case '\u2029':
               ++this.yyline;
               this.yycolumn = 0;
               yy_r = false;
               break;
            case '\r':
               ++this.yyline;
               this.yycolumn = 0;
               yy_r = true;
               break;
            default:
               yy_r = false;
               ++this.yycolumn;
            }
         }

         boolean eof;
         if (yy_r) {
            if (yy_markedPos_l < yy_endRead_l) {
               eof = yy_buffer_l[yy_markedPos_l] == '\n';
            } else if (this.yy_atEOF) {
               eof = false;
            } else {
               boolean eof = this.yy_refill();
               yy_markedPos_l = this.yy_markedPos;
               yy_buffer_l = this.yy_buffer;
               if (eof) {
                  eof = false;
               } else {
                  eof = yy_buffer_l[yy_markedPos_l] == '\n';
               }
            }

            if (eof) {
               --this.yyline;
            }
         }

         int yy_action = -1;
         yy_currentPos_l = this.yy_currentPos = this.yy_startRead = yy_markedPos_l;
         this.yy_state = this.yy_lexical_state;

         int yy_input;
         while(true) {
            if (yy_currentPos_l < yy_endRead_l) {
               yy_input = yy_buffer_l[yy_currentPos_l++];
            } else {
               if (this.yy_atEOF) {
                  yy_input = -1;
                  break;
               }

               this.yy_currentPos = yy_currentPos_l;
               this.yy_markedPos = yy_markedPos_l;
               eof = this.yy_refill();
               yy_currentPos_l = this.yy_currentPos;
               yy_markedPos_l = this.yy_markedPos;
               yy_buffer_l = this.yy_buffer;
               yy_endRead_l = this.yy_endRead;
               if (eof) {
                  yy_input = -1;
                  break;
               }

               yy_input = yy_buffer_l[yy_currentPos_l++];
            }

            int yy_next = yytrans_l[yy_rowMap_l[this.yy_state] + yycmap_l[yy_input]];
            if (yy_next == -1) {
               break;
            }

            this.yy_state = yy_next;
            int yy_attributes = yy_attr_l[this.yy_state];
            if ((yy_attributes & 1) == 1) {
               yy_action = this.yy_state;
               yy_markedPos_l = yy_currentPos_l;
               if ((yy_attributes & 8) == 8) {
                  break;
               }
            }
         }

         this.yy_markedPos = yy_markedPos_l;
         switch(yy_action) {
         case 2:
         case 5:
         case 16:
         case 23:
            this.emit_warning("Unrecognized character '" + this.yytext() + "' -- ignored");
         case 3:
         case 4:
         case 133:
         case 134:
         case 135:
         case 136:
         case 137:
         case 138:
         case 139:
         case 140:
         case 141:
         case 142:
         case 143:
         case 144:
         case 145:
         case 146:
         case 147:
         case 148:
         case 149:
         case 150:
         case 151:
         case 152:
         case 153:
         case 154:
         case 155:
         case 156:
         case 157:
         case 158:
         case 159:
         case 160:
         case 161:
         case 162:
         case 163:
         case 164:
         case 165:
         case 166:
         case 167:
         case 168:
         case 169:
         case 170:
            break;
         case 6:
            return this.symbol("STAR", 15);
         case 7:
         case 17:
         case 18:
         case 19:
         case 20:
         case 24:
         case 25:
         case 26:
         case 27:
         case 28:
         case 29:
         case 30:
         case 37:
         case 38:
         case 39:
         case 40:
         case 41:
         case 42:
         case 44:
         case 45:
         case 46:
         case 47:
         case 48:
         case 49:
         case 50:
         case 51:
         case 52:
         case 53:
         case 58:
         case 59:
         case 60:
         case 61:
         case 62:
         case 63:
         case 64:
         case 65:
         case 66:
         case 67:
         case 68:
         case 69:
         case 70:
         case 71:
         case 72:
         case 74:
         case 76:
         case 77:
         case 78:
         case 79:
         case 80:
         case 82:
         case 83:
         case 84:
         case 86:
         case 89:
         case 90:
         case 91:
         case 92:
         case 95:
         case 96:
         case 97:
         case 99:
         case 101:
         case 102:
         case 103:
         case 106:
         case 107:
         case 108:
         case 110:
         case 111:
         case 114:
         case 115:
         case 116:
         case 117:
         case 120:
         case 121:
         case 122:
         case 123:
         case 126:
         case 127:
         case 128:
         case 130:
            return this.symbol("ID", 34, this.yytext());
         case 8:
            return this.symbol("QESTION", 30);
         case 9:
            return this.symbol("SEMI", 13);
         case 10:
            return this.symbol("COMMA", 14);
         case 11:
            return this.symbol("DOT", 16);
         case 12:
            return this.symbol("BAR", 19);
         case 13:
            return this.symbol("LBRACK", 25);
         case 14:
            return this.symbol("RBRACK", 26);
         case 15:
            return this.symbol("COLON", 17);
         case 21:
            return this.symbol("GT", 28);
         case 22:
            return this.symbol("LT", 29);
         case 31:
         case 32:
            this.sb.append(this.yytext());
            break;
         case 33:
         case 34:
         case 35:
         case 36:
         case 55:
         case 57:
         case 75:
         case 132:
         default:
            if (yy_input == -1 && this.yy_startRead == this.yy_currentPos) {
               this.yy_atEOF = true;
               this.yy_do_eof();
               return this.symbolFactory.newSymbol("EOF", 0);
            }

            this.yy_ScanError(2);
            break;
         case 43:
            this.sb = new StringBuffer();
            this.csline = this.yyline + 1;
            this.cscolumn = this.yycolumn + 1;
            this.yybegin(1);
            break;
         case 54:
            this.yybegin(0);
            return this.symbolFactory.newSymbol("CODE_STRING", 35, (ComplexSymbolFactory.Location)(new ComplexSymbolFactory.Location(this.csline, this.cscolumn)), (ComplexSymbolFactory.Location)(new ComplexSymbolFactory.Location(this.yyline + 1, this.yycolumn + 1 + this.yylength())), this.sb.toString());
         case 56:
            return this.symbol("COLON_COLON_EQUALS", 18);
         case 73:
            return this.symbol("NON", 8);
         case 81:
            return this.symbol("CODE", 4);
         case 85:
            return this.symbol("INIT", 9);
         case 87:
            return this.symbol("LEFT", 21);
         case 88:
            return this.symbol("SCAN", 10);
         case 93:
            return this.symbol("WITH", 11);
         case 94:
            return this.symbol("PERCENT_PREC", 24);
         case 98:
            return this.symbol("RIGHT", 22);
         case 100:
            return this.symbol("CLASS", 33);
         case 104:
            return this.symbol("START", 12);
         case 105:
            return this.symbol("SUPER", 31);
         case 109:
            return this.symbol("PARSER", 6);
         case 112:
            return this.symbol("ACTION", 5);
         case 113:
            return this.symbol("IMPORT", 3);
         case 118:
            return this.symbol("PACKAGE", 2);
         case 119:
            return this.symbol("EXTENDS", 32);
         case 124:
            return this.symbol("PARSER", 7);
         case 125:
            return this.symbol("NONASSOC", 23);
         case 129:
            return this.symbol("PRECEDENCE", 20);
         case 131:
            return this.symbol("NONTERMINAL", 27);
         }
      }
   }
}
